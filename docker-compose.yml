version: '3.9'

services:
  
  postgres:
    container_name: 'postgres_container'
    image: postgres:13.3
    environment:
      POSTGRES_PASSWORD: 'password'
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - internal_network

  news_agregator:
    container_name: 'news_agregator_container'
    build: 
      context: ./
      dockerfile: ./news_agregator/Dockerfile
    image: news_agregator
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - internal_network
  
  telegram_bot:
    container_name: 'telegram_bot_container'
    build: 
      context: ./
      dockerfile: ./telegram_bot/Dockerfile
    image: telegram_bot
    environment:
      BOT_API_TOKEN: 'YOUR_API_TOKEN_HERE'
    depends_on: 
      - news_agregator
    networks:
      - internal_network

networks:
  internal_network:
    driver: bridge
